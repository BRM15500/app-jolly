{"version":3,"sources":["ng://ngx-tour-md-menu/lib/ngx-md-menu-tour.service.ts","ng://ngx-tour-md-menu/lib/tour-anchor-opener.component.ts","ng://ngx-tour-md-menu/lib/tour-step-template.service.ts","ng://ngx-tour-md-menu/lib/tour-backdrop.service.ts","ng://ngx-tour-md-menu/lib/tour-anchor.directive.ts","ng://ngx-tour-md-menu/lib/tour-step-template.component.ts","ng://ngx-tour-md-menu/lib/md-menu.module.ts"],"names":["tslib_1.__extends","Injectable","TourService","TourAnchorOpenerComponent","MatMenu","undefined","xPosition","yPosition","overlapTrigger","backdropClass","Component","args","selector","styles","template","Input","ViewChild","MatMenuTrigger","TourStepTemplateService","TourBackdropService","rendererFactory","this","renderer","createRenderer","prototype","show","targetElement","boundingRect","nativeElement","getBoundingClientRect","backdropElement","createElement","addClass","appendChild","document","body","setStyles","close","removeChild","position","width","height","top","left","box-shadow","z-index","_a","tslib_1.__values","Object","keys","_b","next","done","name_1","value","setStyle","RendererFactory2","TourAnchorMatMenuDirective","componentFactoryResolver","injector","viewContainer","element","tourService","tourStepTemplate","tourBackdrop","opener","createComponent","resolveComponentFactory","instance","ngOnInit","register","tourAnchor","ngOnDestroy","unregister","showTourStep","step","isActive","templateComponent","preventScrolling","withinviewport","sides","scrollIntoView","_element","trigger","menu","tourStep","ngAfterContentInit","openMenu","enableBackdrop","prevBtnTitle","nextBtnTitle","endBtnTitle","menuCloseSubscription","unsubscribe","menuClosed","pipe","first","subscribe","_this","getStatus","TourState","OFF","end","hideTourStep","closeMenu","Directive","ComponentFactoryResolver","Injector","ViewContainerRef","ElementRef","NgxmTourService","HostBinding","TourStepTemplateComponent","tourStepTemplateService","_super","call","ngAfterViewInit","type","ContentChild","TemplateRef","TourHotkeyListenerComponent","TourMatMenuModule","forRoot","ngModule","providers","tslib_1","__spread","TourModule","NgModule","declarations","entryComponents","exports","imports","CommonModule","MatMenuModule","MatCardModule","MatButtonModule","MatIconModule"],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\nimport { TourService } from 'ngx-tour-core';\n\nimport { INgxmStepOption } from './step-option.interface';\n\n@Injectable()\nexport class NgxmTourService extends TourService<INgxmStepOption> {}\n","import { Component, ViewChild, Input } from '@angular/core';\nimport { MatMenuTrigger, MatMenu } from '@angular/material';\n\n@Component({\n  selector: 'tourAnchorOpener',\n  styles: [`:host { display: none; }`],\n  template: `<span [matMenuTriggerFor]=\"menu\" #trigger=\"matMenuTrigger\"></span>`\n})\nexport class TourAnchorOpenerComponent {\n  @Input() menu: MatMenu = new MatMenu(undefined, undefined, { xPosition: 'after', yPosition: 'below', overlapTrigger: true, backdropClass: '' });\n\n  @ViewChild(MatMenuTrigger) public trigger: MatMenuTrigger;\n}\n","import { Injectable } from '@angular/core';\n\nimport { TourStepTemplateComponent } from './tour-step-template.component';\n\n@Injectable()\nexport class TourStepTemplateService {\n  public templateComponent: TourStepTemplateComponent;\n}\n","import { ElementRef, Injectable, Renderer2, RendererFactory2 } from '@angular/core';\n\n@Injectable()\nexport class TourBackdropService {\n  private renderer: Renderer2;\n  private backdropElement: HTMLElement;\n\n  constructor(rendererFactory: RendererFactory2) {\n    this.renderer = rendererFactory.createRenderer(null, null);\n  }\n\n  public show(targetElement: ElementRef) {\n    const boundingRect = targetElement.nativeElement.getBoundingClientRect();\n\n    if (!this.backdropElement) {\n      this.backdropElement = this.renderer.createElement('div');\n      this.renderer.addClass(this.backdropElement, 'ngx-tour_backdrop');\n      this.renderer.appendChild(document.body, this.backdropElement);\n    }\n\n    this.setStyles(boundingRect);\n  }\n\n  public close() {\n    if (this.backdropElement) {\n      this.renderer.removeChild(document.body, this.backdropElement);\n      this.backdropElement = null;\n    }\n  }\n\n  private setStyles(boundingRect: DOMRect) {\n    const styles = {\n      position: 'fixed',\n      width: boundingRect.width + 'px',\n      height: boundingRect.height + 'px',\n      top: boundingRect.top + 'px',\n      left: boundingRect.left + 'px',\n      'box-shadow': '0 0 0 9999px rgba(0, 0, 0, 0.7)',\n      'z-index': '100'\n    };\n\n    for (const name of Object.keys(styles)) {\n      this.renderer.setStyle(this.backdropElement, name, styles[name]);\n    }\n  }\n}\n","import {\n  ComponentFactoryResolver,\n  Directive,\n  ElementRef,\n  HostBinding,\n  Injector,\n  Input,\n  OnDestroy,\n  OnInit,\n  ViewContainerRef\n} from '@angular/core';\nimport {\n  TourAnchorDirective,\n  TourState\n} from 'ngx-tour-core';\nimport { Subscription } from 'rxjs';\nimport withinviewport from 'withinviewport';\n\nimport { TourAnchorOpenerComponent } from './tour-anchor-opener.component';\nimport { TourStepTemplateService } from './tour-step-template.service';\nimport { first } from 'rxjs/operators';\nimport {TourBackdropService} from './tour-backdrop.service';\nimport { INgxmStepOption as IStepOption } from './step-option.interface';\nimport {NgxmTourService} from './ngx-md-menu-tour.service';\n\n@Directive({\n  selector: '[tourAnchor]'\n})\nexport class TourAnchorMatMenuDirective\n  implements OnInit, OnDestroy, TourAnchorDirective {\n  @Input() public tourAnchor: string;\n  public opener: TourAnchorOpenerComponent;\n  public menuCloseSubscription: Subscription;\n\n  @HostBinding('class.touranchor--is-active') public isActive: boolean;\n\n  constructor(\n    private componentFactoryResolver: ComponentFactoryResolver,\n    private injector: Injector,\n    private viewContainer: ViewContainerRef,\n    private element: ElementRef,\n    private tourService: NgxmTourService,\n    private tourStepTemplate: TourStepTemplateService,\n    private tourBackdrop: TourBackdropService\n  ) {\n    this.opener = this.viewContainer.createComponent(\n      this.componentFactoryResolver.resolveComponentFactory(\n        TourAnchorOpenerComponent\n      )\n    ).instance;\n  }\n\n  public ngOnInit(): void {\n    this.tourService.register(this.tourAnchor, this);\n  }\n\n  public ngOnDestroy(): void {\n    this.tourService.unregister(this.tourAnchor);\n  }\n\n  public showTourStep(step: IStepOption): void {\n    this.isActive = true;\n    this.tourStepTemplate.templateComponent.step = step;\n    // Ignore step.placement\n    if (!step.preventScrolling) {\n      if (!withinviewport(this.element.nativeElement, { sides: 'bottom' })) {\n        (<HTMLElement>this.element.nativeElement).scrollIntoView(false);\n      } else if (\n        !withinviewport(this.element.nativeElement, { sides: 'left top right' })\n      ) {\n        (<HTMLElement>this.element.nativeElement).scrollIntoView(true);\n      }\n    }\n    (<any>this.opener.trigger)._element = this.element;\n    this.opener.trigger.menu = this.tourStepTemplate.templateComponent.tourStep;\n    this.opener.trigger.ngAfterContentInit();\n    this.opener.trigger.openMenu();\n\n    if (step.enableBackdrop) {\n      this.tourBackdrop.show(this.element);\n    } else {\n      this.tourBackdrop.close();\n    }\n\n    step.prevBtnTitle = step.prevBtnTitle || 'Prev';\n    step.nextBtnTitle = step.nextBtnTitle || 'Next';\n    step.endBtnTitle = step.endBtnTitle || 'End';\n\n    if (this.menuCloseSubscription) {\n      this.menuCloseSubscription.unsubscribe();\n    }\n    this.menuCloseSubscription = this.opener.trigger.menuClosed\n      .pipe(first())\n      .subscribe(() => {\n        if (this.tourService.getStatus() !== TourState.OFF) {\n          this.tourService.end();\n        }\n        this.tourBackdrop.close();\n      });\n  }\n\n  public hideTourStep(): void {\n    this.isActive = false;\n    if (this.menuCloseSubscription) {\n      this.menuCloseSubscription.unsubscribe();\n    }\n    this.opener.trigger.closeMenu();\n    if (this.tourService.getStatus() === TourState.OFF) {\n      this.tourBackdrop.close();\n    }\n  }\n}\n","import { AfterViewInit, Component, ContentChild, Input, TemplateRef, ViewChild } from '@angular/core';\nimport { MatMenu } from '@angular/material';\nimport { IStepOption, TourHotkeyListenerComponent } from 'ngx-tour-core';\n\nimport { TourStepTemplateService } from './tour-step-template.service';\nimport {NgxmTourService} from './ngx-md-menu-tour.service';\n\n@Component({\n  selector: 'tour-step-template',\n  styles: [`\n      ::ng-deep .tour-step .mat-menu-content { \n          padding: 0 !important; \n      }\n  `],\n  template: `\n    <mat-menu [overlapTrigger]=\"false\" class=\"tour-step\">\n      <ng-container *ngTemplateOutlet=\"stepTemplate || defaultTemplate; context: { step: step }\"></ng-container>\n    </mat-menu>\n    <ng-template #defaultTemplate let-step=\"step\">\n      <mat-card (click)=\"$event.stopPropagation()\">\n        <mat-card-title>\n          {{step?.title}}\n        </mat-card-title>\n        <mat-card-content>\n          {{step?.content}}\n        </mat-card-content>\n        <mat-card-actions>\n          <button mat-icon-button [disabled]=\"!tourService.hasPrev(step)\" (click)=\"tourService.prev()\">\n            <mat-icon>chevron_left</mat-icon>\n          </button>\n          <button mat-icon-button [disabled]=\"!tourService.hasNext(step)\" (click)=\"tourService.next()\">\n            <mat-icon>chevron_right</mat-icon>\n          </button>\n          <button mat-button (click)=\"tourService.end()\">{{step?.endBtnTitle}}</button>\n        </mat-card-actions>\n      </mat-card>\n    </ng-template>\n  `,\n})\nexport class TourStepTemplateComponent extends TourHotkeyListenerComponent implements AfterViewInit {\n  @ViewChild(MatMenu) public tourStep: MatMenu;\n\n  @Input()\n  @ContentChild(TemplateRef)\n  public stepTemplate: TemplateRef<{ step: IStepOption }>;\n\n  public step: IStepOption = {};\n\n  constructor(private tourStepTemplateService: TourStepTemplateService, public tourService: NgxmTourService) {\n    super(tourService);\n  }\n\n  public ngAfterViewInit(): void {\n    this.tourStepTemplateService.templateComponent = this;\n  }\n}\n","import { TourAnchorOpenerComponent } from './tour-anchor-opener.component';\nimport { CommonModule } from '@angular/common';\nimport { ModuleWithProviders, NgModule } from '@angular/core';\nimport { MatMenuModule, MatButtonModule, MatCardModule, MatIconModule } from '@angular/material';\n\nimport { TourModule } from 'ngx-tour-core';\nimport { TourAnchorMatMenuDirective } from './tour-anchor.directive';\nimport { TourStepTemplateComponent } from './tour-step-template.component';\nimport { TourStepTemplateService } from './tour-step-template.service';\nimport {TourBackdropService} from './tour-backdrop.service';\nimport {NgxmTourService} from './ngx-md-menu-tour.service';\n\nexport { TourAnchorMatMenuDirective, TourStepTemplateComponent, NgxmTourService };\n\n@NgModule({\n  declarations: [TourAnchorMatMenuDirective, TourStepTemplateComponent, TourAnchorOpenerComponent],\n  entryComponents: [TourAnchorOpenerComponent],\n  exports: [TourAnchorMatMenuDirective, TourStepTemplateComponent, TourModule],\n  imports: [CommonModule, TourModule,\n    MatMenuModule, MatCardModule, MatButtonModule, MatIconModule,\n  ],\n})\nexport class TourMatMenuModule {\n  public static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: TourMatMenuModule,\n      providers: [\n        TourStepTemplateService,\n        TourBackdropService,\n        ...TourModule.forRoot().providers,\n          NgxmTourService\n      ],\n    };\n  }\n}\n"]}