{"version":3,"file":"ngx-tour-md-menu.umd.js.map","sources":["ng://ngx-tour-md-menu/lib/ngx-md-menu-tour.service.ts","ng://ngx-tour-md-menu/lib/tour-anchor-opener.component.ts","ng://ngx-tour-md-menu/lib/tour-step-template.service.ts","ng://ngx-tour-md-menu/lib/tour-backdrop.service.ts","ng://ngx-tour-md-menu/lib/tour-anchor.directive.ts","ng://ngx-tour-md-menu/lib/tour-step-template.component.ts","ng://ngx-tour-md-menu/lib/md-menu.module.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { TourService } from 'ngx-tour-core';\n\nimport { INgxmStepOption } from './step-option.interface';\n\n@Injectable()\nexport class NgxmTourService extends TourService<INgxmStepOption> {}\n","import { Component, ViewChild, Input } from '@angular/core';\nimport { MatMenuTrigger, MatMenu } from '@angular/material';\n\n@Component({\n  selector: 'tourAnchorOpener',\n  styles: [`:host { display: none; }`],\n  template: `<span [matMenuTriggerFor]=\"menu\" #trigger=\"matMenuTrigger\"></span>`\n})\nexport class TourAnchorOpenerComponent {\n  @Input() menu: MatMenu = new MatMenu(undefined, undefined, { xPosition: 'after', yPosition: 'below', overlapTrigger: true, backdropClass: '' });\n\n  @ViewChild(MatMenuTrigger) public trigger: MatMenuTrigger;\n}\n","import { Injectable } from '@angular/core';\n\nimport { TourStepTemplateComponent } from './tour-step-template.component';\n\n@Injectable()\nexport class TourStepTemplateService {\n  public templateComponent: TourStepTemplateComponent;\n}\n","import { ElementRef, Injectable, Renderer2, RendererFactory2 } from '@angular/core';\n\n@Injectable()\nexport class TourBackdropService {\n  private renderer: Renderer2;\n  private backdropElement: HTMLElement;\n\n  constructor(rendererFactory: RendererFactory2) {\n    this.renderer = rendererFactory.createRenderer(null, null);\n  }\n\n  public show(targetElement: ElementRef) {\n    const boundingRect = targetElement.nativeElement.getBoundingClientRect();\n\n    if (!this.backdropElement) {\n      this.backdropElement = this.renderer.createElement('div');\n      this.renderer.addClass(this.backdropElement, 'ngx-tour_backdrop');\n      this.renderer.appendChild(document.body, this.backdropElement);\n    }\n\n    this.setStyles(boundingRect);\n  }\n\n  public close() {\n    if (this.backdropElement) {\n      this.renderer.removeChild(document.body, this.backdropElement);\n      this.backdropElement = null;\n    }\n  }\n\n  private setStyles(boundingRect: DOMRect) {\n    const styles = {\n      position: 'fixed',\n      width: boundingRect.width + 'px',\n      height: boundingRect.height + 'px',\n      top: boundingRect.top + 'px',\n      left: boundingRect.left + 'px',\n      'box-shadow': '0 0 0 9999px rgba(0, 0, 0, 0.7)',\n      'z-index': '100'\n    };\n\n    for (const name of Object.keys(styles)) {\n      this.renderer.setStyle(this.backdropElement, name, styles[name]);\n    }\n  }\n}\n","import {\n  ComponentFactoryResolver,\n  Directive,\n  ElementRef,\n  HostBinding,\n  Injector,\n  Input,\n  OnDestroy,\n  OnInit,\n  ViewContainerRef\n} from '@angular/core';\nimport {\n  TourAnchorDirective,\n  TourState\n} from 'ngx-tour-core';\nimport { Subscription } from 'rxjs';\nimport withinviewport from 'withinviewport';\n\nimport { TourAnchorOpenerComponent } from './tour-anchor-opener.component';\nimport { TourStepTemplateService } from './tour-step-template.service';\nimport { first } from 'rxjs/operators';\nimport {TourBackdropService} from './tour-backdrop.service';\nimport { INgxmStepOption as IStepOption } from './step-option.interface';\nimport {NgxmTourService} from './ngx-md-menu-tour.service';\n\n@Directive({\n  selector: '[tourAnchor]'\n})\nexport class TourAnchorMatMenuDirective\n  implements OnInit, OnDestroy, TourAnchorDirective {\n  @Input() public tourAnchor: string;\n  public opener: TourAnchorOpenerComponent;\n  public menuCloseSubscription: Subscription;\n\n  @HostBinding('class.touranchor--is-active') public isActive: boolean;\n\n  constructor(\n    private componentFactoryResolver: ComponentFactoryResolver,\n    private injector: Injector,\n    private viewContainer: ViewContainerRef,\n    private element: ElementRef,\n    private tourService: NgxmTourService,\n    private tourStepTemplate: TourStepTemplateService,\n    private tourBackdrop: TourBackdropService\n  ) {\n    this.opener = this.viewContainer.createComponent(\n      this.componentFactoryResolver.resolveComponentFactory(\n        TourAnchorOpenerComponent\n      )\n    ).instance;\n  }\n\n  public ngOnInit(): void {\n    this.tourService.register(this.tourAnchor, this);\n  }\n\n  public ngOnDestroy(): void {\n    this.tourService.unregister(this.tourAnchor);\n  }\n\n  public showTourStep(step: IStepOption): void {\n    this.isActive = true;\n    this.tourStepTemplate.templateComponent.step = step;\n    // Ignore step.placement\n    if (!step.preventScrolling) {\n      if (!withinviewport(this.element.nativeElement, { sides: 'bottom' })) {\n        (<HTMLElement>this.element.nativeElement).scrollIntoView(false);\n      } else if (\n        !withinviewport(this.element.nativeElement, { sides: 'left top right' })\n      ) {\n        (<HTMLElement>this.element.nativeElement).scrollIntoView(true);\n      }\n    }\n    (<any>this.opener.trigger)._element = this.element;\n    this.opener.trigger.menu = this.tourStepTemplate.templateComponent.tourStep;\n    this.opener.trigger.ngAfterContentInit();\n    this.opener.trigger.openMenu();\n\n    if (step.enableBackdrop) {\n      this.tourBackdrop.show(this.element);\n    } else {\n      this.tourBackdrop.close();\n    }\n\n    step.prevBtnTitle = step.prevBtnTitle || 'Prev';\n    step.nextBtnTitle = step.nextBtnTitle || 'Next';\n    step.endBtnTitle = step.endBtnTitle || 'End';\n\n    if (this.menuCloseSubscription) {\n      this.menuCloseSubscription.unsubscribe();\n    }\n    this.menuCloseSubscription = this.opener.trigger.menuClosed\n      .pipe(first())\n      .subscribe(() => {\n        if (this.tourService.getStatus() !== TourState.OFF) {\n          this.tourService.end();\n        }\n        this.tourBackdrop.close();\n      });\n  }\n\n  public hideTourStep(): void {\n    this.isActive = false;\n    if (this.menuCloseSubscription) {\n      this.menuCloseSubscription.unsubscribe();\n    }\n    this.opener.trigger.closeMenu();\n    if (this.tourService.getStatus() === TourState.OFF) {\n      this.tourBackdrop.close();\n    }\n  }\n}\n","import { AfterViewInit, Component, ContentChild, Input, TemplateRef, ViewChild } from '@angular/core';\nimport { MatMenu } from '@angular/material';\nimport { IStepOption, TourHotkeyListenerComponent } from 'ngx-tour-core';\n\nimport { TourStepTemplateService } from './tour-step-template.service';\nimport {NgxmTourService} from './ngx-md-menu-tour.service';\n\n@Component({\n  selector: 'tour-step-template',\n  styles: [`\n      ::ng-deep .tour-step .mat-menu-content { \n          padding: 0 !important; \n      }\n  `],\n  template: `\n    <mat-menu [overlapTrigger]=\"false\" class=\"tour-step\">\n      <ng-container *ngTemplateOutlet=\"stepTemplate || defaultTemplate; context: { step: step }\"></ng-container>\n    </mat-menu>\n    <ng-template #defaultTemplate let-step=\"step\">\n      <mat-card (click)=\"$event.stopPropagation()\">\n        <mat-card-title>\n          {{step?.title}}\n        </mat-card-title>\n        <mat-card-content>\n          {{step?.content}}\n        </mat-card-content>\n        <mat-card-actions>\n          <button mat-icon-button [disabled]=\"!tourService.hasPrev(step)\" (click)=\"tourService.prev()\">\n            <mat-icon>chevron_left</mat-icon>\n          </button>\n          <button mat-icon-button [disabled]=\"!tourService.hasNext(step)\" (click)=\"tourService.next()\">\n            <mat-icon>chevron_right</mat-icon>\n          </button>\n          <button mat-button (click)=\"tourService.end()\">{{step?.endBtnTitle}}</button>\n        </mat-card-actions>\n      </mat-card>\n    </ng-template>\n  `,\n})\nexport class TourStepTemplateComponent extends TourHotkeyListenerComponent implements AfterViewInit {\n  @ViewChild(MatMenu) public tourStep: MatMenu;\n\n  @Input()\n  @ContentChild(TemplateRef)\n  public stepTemplate: TemplateRef<{ step: IStepOption }>;\n\n  public step: IStepOption = {};\n\n  constructor(private tourStepTemplateService: TourStepTemplateService, public tourService: NgxmTourService) {\n    super(tourService);\n  }\n\n  public ngAfterViewInit(): void {\n    this.tourStepTemplateService.templateComponent = this;\n  }\n}\n","import { TourAnchorOpenerComponent } from './tour-anchor-opener.component';\nimport { CommonModule } from '@angular/common';\nimport { ModuleWithProviders, NgModule } from '@angular/core';\nimport { MatMenuModule, MatButtonModule, MatCardModule, MatIconModule } from '@angular/material';\n\nimport { TourModule } from 'ngx-tour-core';\nimport { TourAnchorMatMenuDirective } from './tour-anchor.directive';\nimport { TourStepTemplateComponent } from './tour-step-template.component';\nimport { TourStepTemplateService } from './tour-step-template.service';\nimport {TourBackdropService} from './tour-backdrop.service';\nimport {NgxmTourService} from './ngx-md-menu-tour.service';\n\nexport { TourAnchorMatMenuDirective, TourStepTemplateComponent, NgxmTourService };\n\n@NgModule({\n  declarations: [TourAnchorMatMenuDirective, TourStepTemplateComponent, TourAnchorOpenerComponent],\n  entryComponents: [TourAnchorOpenerComponent],\n  exports: [TourAnchorMatMenuDirective, TourStepTemplateComponent, TourModule],\n  imports: [CommonModule, TourModule,\n    MatMenuModule, MatCardModule, MatButtonModule, MatIconModule,\n  ],\n})\nexport class TourMatMenuModule {\n  public static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: TourMatMenuModule,\n      providers: [\n        TourStepTemplateService,\n        TourBackdropService,\n        ...TourModule.forRoot().providers,\n          NgxmTourService\n      ],\n    };\n  }\n}\n"],"names":["tslib_1.__extends","Injectable","TourService","MatMenu","Component","Input","ViewChild","MatMenuTrigger","tslib_1.__values","RendererFactory2","first","TourState","Directive","ComponentFactoryResolver","Injector","ViewContainerRef","ElementRef","HostBinding","ContentChild","TemplateRef","TourHotkeyListenerComponent","TourModule","NgModule","CommonModule","MatMenuModule","MatCardModule","MatButtonModule","MatIconModule"],"mappings":"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"}
